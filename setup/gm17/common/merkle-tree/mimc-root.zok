import "../hashes/mimc/mimc-hash-2.zok" as mimc2
import "utils/pack/unpack128.code" as unpack128

def orderFields(field order, field pathNode, field siblingNode)->(field[2]):
	field left = if order == 0 then pathNode else siblingNode fi
	field right = if order == 0 then siblingNode else pathNode fi
	return [left, right]

// Merkle Tree root calculation given:
//  Path - sibling path up the tree
//  Order - LeafIndex, decomposed to binary for calculation up the tree
//  Hash - input commitment (leafValue)

def main(field[32] path, field order, field hash)->(field):

  field[128] orderBits = unpack128(order)
  field mimcHash = hash

  for field i in 0..32 do
    field j = 31-i // since we have 32 path elts
    field k = 127-i // since order is unpacked to 128 bits
    mimcHash = mimc2(orderFields(orderBits[k], mimcHash, path[j]))
  endfor

  return(mimcHash)
